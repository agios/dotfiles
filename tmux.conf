###########################
#  Configuration
###########################

source ~/.tmux-local.conf

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set -g history-limit 16384

#use vim key bindings
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "xclip -i -selection clipboard"

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# prevent named windows from changing name
set-option -g allow-rename off

###########################
#  Key Bindings
###########################

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# quick view of processes,
bind '~' split-window "exec htop"
bind '`' new-window "exec htop"

###########################
#  Status Bar
###########################

# refresh interval
set -g status-interval 30

# color
set -g status-bg colour235
set -g status-fg white

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=green]#S#[fg=blue] #I:#P#[default]'
#set -g status-left '#[fg=green]#S#[default]'
# show hostname, date, time, and battery in right status bar
set-option -g status-right '#[fg=green]#H#[default] %d/%m/%y %H:%M #[fg=red]#(battery discharging)#[fg=green]#(battery charging)'

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

###################################################
# Smart pane switching with awareness of vim splits
###################################################

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
